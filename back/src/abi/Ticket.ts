export const ticketContract = {
  abi: [
    {
      inputs: [
        {
          internalType: 'string',
          name: 'name_',
          type: 'string',
        },
        {
          internalType: 'string',
          name: 'symbol_',
          type: 'string',
        },
        {
          internalType: 'uint64',
          name: 'totalSupply_',
          type: 'uint64',
        },
        {
          internalType: 'bool',
          name: 'isTransferable_',
          type: 'bool',
        },
        {
          internalType: 'bool',
          name: 'isRefundable_',
          type: 'bool',
        },
        {
          internalType: 'string',
          name: 'baseURI_',
          type: 'string',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'ERC721IncorrectOwner',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'ERC721InsufficientApproval',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'approver',
          type: 'address',
        },
      ],
      name: 'ERC721InvalidApprover',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      name: 'ERC721InvalidOperator',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'ERC721InvalidOwner',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'receiver',
          type: 'address',
        },
      ],
      name: 'ERC721InvalidReceiver',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
      ],
      name: 'ERC721InvalidSender',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'ERC721NonexistentToken',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'OwnableInvalidOwner',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'OwnableUnauthorizedAccount',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'approved',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Approval',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'ApprovalForAll',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'approve',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'balanceOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'getApproved',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      name: 'isApprovedForAll',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'isRefundable',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'isTransferable',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
      ],
      name: 'mint',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'name',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'ownerOf',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'setApprovalForAll',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'supply',
      outputs: [
        {
          internalType: 'uint64',
          name: '',
          type: 'uint64',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes4',
          name: 'interfaceId',
          type: 'bytes4',
        },
      ],
      name: 'supportsInterface',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'tokenURI',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [
        {
          internalType: 'uint64',
          name: '',
          type: 'uint64',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'transferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  bytecode: {
    object:
      '0x60806040523480156200001157600080fd5b506040516200185938038062001859833981016040819052620000349162000232565b338686600062000045838262000392565b50600162000054828262000392565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000918162000105565b5060068054600160a01b600160e01b031916600160a01b6001600160401b038716021790556007805461ffff60401b1916680100000000000000008515150260ff60481b1916176901000000000000000000841515021790556008620000f8828262000392565b505050505050506200045e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017f57600080fd5b81516001600160401b03808211156200019c576200019c62000157565b604051601f8301601f19908116603f01168101908282118183101715620001c757620001c762000157565b81604052838152602092508683858801011115620001e457600080fd5b600091505b83821015620002085785820183015181830184015290820190620001e9565b600093810190920192909252949350505050565b805180151581146200022d57600080fd5b919050565b60008060008060008060c087890312156200024c57600080fd5b86516001600160401b03808211156200026457600080fd5b620002728a838b016200016d565b975060208901519150808211156200028957600080fd5b620002978a838b016200016d565b9650604089015191508082168214620002af57600080fd5b819550620002c060608a016200021c565b9450620002d060808a016200021c565b935060a0890151915080821115620002e757600080fd5b50620002f689828a016200016d565b9150509295509295509295565b600181811c908216806200031857607f821691505b6020821081036200033957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038d57600081815260208120601f850160051c81016020861015620003685750805b601f850160051c820191505b81811015620003895782815560010162000374565b5050505b505050565b81516001600160401b03811115620003ae57620003ae62000157565b620003c681620003bf845462000303565b846200033f565b602080601f831160018114620003fe5760008415620003e55750858301515b600019600386901b1c1916600185901b17855562000389565b600085815260208120601f198616915b828110156200042f578886015182559484019460019091019084016200040e565b50858210156200044e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113eb806200046e6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b41146102cd578063a22cb465146102d5578063b88d4fde146102e8578063c87b56dd146102fb578063e985e9c51461030e578063f2fde38b1461032157600080fd5b80636352211e1461026d5780636a6278421461028057806370a0823114610293578063715018a6146102b45780638da5cb5b146102bc57600080fd5b806318160ddd1161010a57806318160ddd146101f15780632121dc751461020c57806323b872dd146102205780632c1fecfe1461023357806342842e0e1461024757806342966c681461025a57600080fd5b806301ffc9a714610147578063047fc9aa1461016f57806306fdde031461019c578063081812fc146101b1578063095ea7b3146101dc575b600080fd5b61015a61015536600461100c565b610334565b60405190151581526020015b60405180910390f35b6007546101839067ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610166565b6101a4610386565b6040516101669190611079565b6101c46101bf36600461108c565b610418565b6040516001600160a01b039091168152602001610166565b6101ef6101ea3660046110c1565b610441565b005b60065461018390600160a01b900467ffffffffffffffff1681565b60075461015a90600160401b900460ff1681565b6101ef61022e3660046110eb565b610450565b60075461015a90600160481b900460ff1681565b6101ef6102553660046110eb565b610492565b6101ef61026836600461108c565b6104ad565b6101c461027b36600461108c565b610562565b6101ef61028e366004611127565b61056d565b6102a66102a1366004611127565b610634565b604051908152602001610166565b6101ef61067c565b6006546001600160a01b03166101c4565b6101a4610690565b6101ef6102e3366004611142565b61069f565b6101ef6102f6366004611194565b6106aa565b6101a461030936600461108c565b6106e5565b61015a61031c366004611270565b61074d565b6101ef61032f366004611127565b61077b565b60006001600160e01b031982166380ac58cd60e01b148061036557506001600160e01b03198216635b5e139f60e01b145b8061038057506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610395906112a3565b80601f01602080910402602001604051908101604052809291908181526020018280546103c1906112a3565b801561040e5780601f106103e35761010080835404028352916020019161040e565b820191906000526020600020905b8154815290600101906020018083116103f157829003601f168201915b5050505050905090565b6000610423826107b9565b506000828152600460205260409020546001600160a01b0316610380565b61044c8282336107f2565b5050565b600754600160401b900460ff166104825760405162461bcd60e51b8152600401610479906112dd565b60405180910390fd5b61048d8383836107ff565b505050565b61048d838383604051806020016040528060008152506106aa565b6104b5610884565b600754600160481b900460ff166105245760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a20726566756e64206973206e6f7420616c6c6f77656420666f60448201526c1c881d1a1a5cc81d1a58dad95d609a1b6064820152608401610479565b61052d816108b1565b5060068054600167ffffffffffffffff600160a01b808404821692909201160267ffffffffffffffff60a01b19909116179055565b6000610380826107b9565b610575610884565b60065460075467ffffffffffffffff600160a01b90920482169116106105f55760405162461bcd60e51b815260206004820152602f60248201527f4552433732313a207469636b657420697320736f6c64206f75742c206d696e7460448201526e081a5cc81b9bdd08185b1b1bddd959608a1b6064820152608401610479565b60075461060d90829067ffffffffffffffff166108ec565b506007805467ffffffffffffffff8082166001011667ffffffffffffffff19909116179055565b60006001600160a01b038216610660576040516322718ad960e21b815260006004820152602401610479565b506001600160a01b031660009081526003602052604090205490565b610684610884565b61068e6000610906565b565b606060018054610395906112a3565b61044c338383610958565b600754600160401b900460ff166106d35760405162461bcd60e51b8152600401610479906112dd565b6106df848484846109f7565b50505050565b60606106f0826107b9565b5060006106fb610a0f565b9050600081511161071b5760405180602001604052806000815250610746565b8061072584610a1e565b60405160200161073692919061132c565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610783610884565b6001600160a01b0381166107ad57604051631e4fbdf760e01b815260006004820152602401610479565b6107b681610906565b50565b6000818152600260205260408120546001600160a01b03168061038057604051637e27328960e01b815260048101849052602401610479565b61048d8383836001610ab1565b6001600160a01b03821661082957604051633250574960e11b815260006004820152602401610479565b6000610836838333610bb7565b9050836001600160a01b0316816001600160a01b0316146106df576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610479565b6006546001600160a01b0316331461068e5760405163118cdaa760e01b8152336004820152602401610479565b60006108c06000836000610bb7565b90506001600160a01b03811661044c57604051637e27328960e01b815260048101839052602401610479565b61044c828260405180602001604052806000815250610cb0565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661098a57604051630b61174360e31b81526001600160a01b0383166004820152602401610479565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a02848484610450565b6106df3385858585610cc4565b606060088054610395906112a3565b60606000610a2b83610def565b600101905060008167ffffffffffffffff811115610a4b57610a4b61117e565b6040519080825280601f01601f191660200182016040528015610a75576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a7f57509392505050565b8080610ac557506001600160a01b03821615155b15610b87576000610ad5846107b9565b90506001600160a01b03831615801590610b015750826001600160a01b0316816001600160a01b031614155b8015610b145750610b12818461074d565b155b15610b3d5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610479565b8115610b855783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b0390811690831615610be457610be4818486610ec7565b6001600160a01b03811615610c2257610c01600085600080610ab1565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610c51576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b610cba8383610f2b565b61048d3360008585855b6001600160a01b0383163b15610de857604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d0690889088908790879060040161135b565b6020604051808303816000875af1925050508015610d41575060408051601f3d908101601f19168201909252610d3e91810190611398565b60015b610daa573d808015610d6f576040519150601f19603f3d011682016040523d82523d6000602084013e610d74565b606091505b508051600003610da257604051633250574960e11b81526001600160a01b0385166004820152602401610479565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610de657604051633250574960e11b81526001600160a01b0385166004820152602401610479565b505b5050505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e2e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e5a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e7857662386f26fc10000830492506010015b6305f5e1008310610e90576305f5e100830492506008015b6127108310610ea457612710830492506004015b60648310610eb6576064830492506002015b600a83106103805760010192915050565b610ed2838383610f90565b61048d576001600160a01b038316610f0057604051637e27328960e01b815260048101829052602401610479565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610479565b6001600160a01b038216610f5557604051633250574960e11b815260006004820152602401610479565b6000610f6383836000610bb7565b90506001600160a01b0381161561048d576040516339e3563760e11b815260006004820152602401610479565b60006001600160a01b03831615801590610fee5750826001600160a01b0316846001600160a01b03161480610fca5750610fca848461074d565b80610fee57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b0319811681146107b657600080fd5b60006020828403121561101e57600080fd5b813561074681610ff6565b60005b8381101561104457818101518382015260200161102c565b50506000910152565b60008151808452611065816020860160208601611029565b601f01601f19169290920160200192915050565b602081526000610746602083018461104d565b60006020828403121561109e57600080fd5b5035919050565b80356001600160a01b03811681146110bc57600080fd5b919050565b600080604083850312156110d457600080fd5b6110dd836110a5565b946020939093013593505050565b60008060006060848603121561110057600080fd5b611109846110a5565b9250611117602085016110a5565b9150604084013590509250925092565b60006020828403121561113957600080fd5b610746826110a5565b6000806040838503121561115557600080fd5b61115e836110a5565b91506020830135801515811461117357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156111aa57600080fd5b6111b3856110a5565b93506111c1602086016110a5565b925060408501359150606085013567ffffffffffffffff808211156111e557600080fd5b818701915087601f8301126111f957600080fd5b81358181111561120b5761120b61117e565b604051601f8201601f19908116603f011681019083821181831017156112335761123361117e565b816040528281528a602084870101111561124c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561128357600080fd5b61128c836110a5565b915061129a602084016110a5565b90509250929050565b600181811c908216806112b757607f821691505b6020821081036112d757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f4552433732313a207472616e73666572206973206e6f7420616c6c6f7765642060408201526e199bdc881d1a1a5cc81d1a58dad95d608a1b606082015260800190565b6000835161133e818460208801611029565b835190830190611352818360208801611029565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061138e9083018461104d565b9695505050505050565b6000602082840312156113aa57600080fd5b815161074681610ff656fea26469706673582212204090b2ea6c60c7007f3e68523e42973e8e874dcd1207d658a3e2a360bdde11b564736f6c63430008140033',
    sourceMap:
      '170:1796:35:-:0;;;361:393;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;589:10;565:5;572:7;1446:5:22;:13;565:5:35;1446::22;:13;:::i;:::-;-1:-1:-1;1469:7:22;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:20;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:20;;1350:1;1322:31;;;4976:51:37;4949:18;;1322:31:20;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;611:11:35::2;:26:::0;;-1:-1:-1;;;;;;;;611:26:35::2;-1:-1:-1::0;;;;;;;;611:26:35;::::2;;;::::0;;647:14:::2;:32:::0;;-1:-1:-1;;;;689:28:35;647:32;;::::2;;;-1:-1:-1::0;;;;689:28:35;;;;::::2;;;;::::0;;647:14:::2;727:20;739:8:::0;647:14;727:20:::2;:::i;:::-;;361:393:::0;;;;;;170:1796;;2912:187:20;3004:6;;;-1:-1:-1;;;;;3020:17:20;;;-1:-1:-1;;;;;;3020:17:20;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:37:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:37;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:37;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:37:o;991:164::-;1067:13;;1116;;1109:21;1099:32;;1089:60;;1145:1;1142;1135:12;1089:60;991:164;;;:::o;1160:1076::-;1298:6;1306;1314;1322;1330;1338;1391:3;1379:9;1370:7;1366:23;1362:33;1359:53;;;1408:1;1405;1398:12;1359:53;1435:16;;-1:-1:-1;;;;;1500:14:37;;;1497:34;;;1527:1;1524;1517:12;1497:34;1550:61;1603:7;1594:6;1583:9;1579:22;1550:61;:::i;:::-;1540:71;;1657:2;1646:9;1642:18;1636:25;1620:41;;1686:2;1676:8;1673:16;1670:36;;;1702:1;1699;1692:12;1670:36;1725:63;1780:7;1769:8;1758:9;1754:24;1725:63;:::i;:::-;1715:73;;1831:2;1820:9;1816:18;1810:25;1797:38;;1875:2;1868:5;1864:14;1857:5;1854:25;1844:53;;1893:1;1890;1883:12;1844:53;1916:5;1906:15;;1940:46;1982:2;1971:9;1967:18;1940:46;:::i;:::-;1930:56;;2005:47;2047:3;2036:9;2032:19;2005:47;:::i;:::-;1995:57;;2098:3;2087:9;2083:19;2077:26;2061:42;;2128:2;2118:8;2115:16;2112:36;;;2144:1;2141;2134:12;2112:36;;2167:63;2222:7;2211:8;2200:9;2196:24;2167:63;:::i;:::-;2157:73;;;1160:1076;;;;;;;;:::o;2241:380::-;2320:1;2316:12;;;;2363;;;2384:61;;2438:4;2430:6;2426:17;2416:27;;2384:61;2491:2;2483:6;2480:14;2460:18;2457:38;2454:161;;2537:10;2532:3;2528:20;2525:1;2518:31;2572:4;2569:1;2562:15;2600:4;2597:1;2590:15;2454:161;;2241:380;;;:::o;2752:545::-;2854:2;2849:3;2846:11;2843:448;;;2890:1;2915:5;2911:2;2904:17;2960:4;2956:2;2946:19;3030:2;3018:10;3014:19;3011:1;3007:27;3001:4;2997:38;3066:4;3054:10;3051:20;3048:47;;;-1:-1:-1;3089:4:37;3048:47;3144:2;3139:3;3135:12;3132:1;3128:20;3122:4;3118:31;3108:41;;3199:82;3217:2;3210:5;3207:13;3199:82;;;3262:17;;;3243:1;3232:13;3199:82;;;3203:3;;;2843:448;2752:545;;;:::o;3473:1352::-;3593:10;;-1:-1:-1;;;;;3615:30:37;;3612:56;;;3648:18;;:::i;:::-;3677:97;3767:6;3727:38;3759:4;3753:11;3727:38;:::i;:::-;3721:4;3677:97;:::i;:::-;3829:4;;3893:2;3882:14;;3910:1;3905:663;;;;4612:1;4629:6;4626:89;;;-1:-1:-1;4681:19:37;;;4675:26;4626:89;-1:-1:-1;;3430:1:37;3426:11;;;3422:24;3418:29;3408:40;3454:1;3450:11;;;3405:57;4728:81;;3875:944;;3905:663;2699:1;2692:14;;;2736:4;2723:18;;-1:-1:-1;;3941:20:37;;;4059:236;4073:7;4070:1;4067:14;4059:236;;;4162:19;;;4156:26;4141:42;;4254:27;;;;4222:1;4210:14;;;;4089:19;;4059:236;;;4063:3;4323:6;4314:7;4311:19;4308:201;;;4384:19;;;4378:26;-1:-1:-1;;4467:1:37;4463:14;;;4479:3;4459:24;4455:37;4451:42;4436:58;4421:74;;4308:201;-1:-1:-1;;;;;4555:1:37;4539:14;;;4535:22;4522:36;;-1:-1:-1;3473:1352:37:o;4830:203::-;170:1796:35;;;;;;',
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      '',
    sourceMap:
      '170:1796:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:22;;;;;;:::i;:::-;;:::i;:::-;;;565:14:37;;558:22;540:41;;528:2;513:18;1560:300:22;;;;;;;;242:20:35;;;;;;;;;;;;766:18:37;754:31;;;736:50;;724:2;709:18;242:20:35;592:200:37;2364:89:22;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1902:32:37;;;1884:51;;1872:2;1857:18;3496:154:22;1738:203:37;3322:113:22;;;;;;:::i;:::-;;:::i;:::-;;211:25:35;;;;;-1:-1:-1;;;211:25:35;;;;;;268:26;;;;;-1:-1:-1;;;268:26:35;;;;;;1351:283;;;;;;:::i;:::-;;:::i;300:24::-;;;;;-1:-1:-1;;;300:24:35;;;;;;4786:132:22;;;;;;:::i;:::-;;:::i;1129:216:35:-;;;;;;:::i;:::-;;:::i;2184:118:22:-;;;;;;:::i;:::-;;:::i;866:257:35:-;;;;;;:::i;:::-;;:::i;1919:208:22:-;;;;;;:::i;:::-;;:::i;:::-;;;3053:25:37;;;3041:2;3026:18;1919:208:22;2907:177:37;2293:101:20;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:20;1638:85;;2517:93:22;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;1640:324:35:-;;;;;;:::i;:::-;;:::i;2676:255:22:-;;;;;;:::i;:::-;;:::i;3927:153::-;;;;;;:::i;:::-;;:::i;2543:215:20:-;;;;;;:::i;:::-;;:::i;1560:300:22:-;1662:4;-1:-1:-1;;;;;;1697:40:22;;-1:-1:-1;;;1697:40:22;;:104;;-1:-1:-1;;;;;;;1753:48:22;;-1:-1:-1;;;1753:48:22;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:30;;;1817:36:22;1678:175;1560:300;-1:-1:-1;;1560:300:22:o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:22;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:22;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:27;3393:8:22;:35::i;:::-;3322:113;;:::o;1351:283:35:-;1493:14;;-1:-1:-1;;;1493:14:35;;;;1472:108;;;;-1:-1:-1;;;1472:108:35;;;;;;;:::i;:::-;;;;;;;;;1590:37;1609:4;1615:2;1619:7;1590:18;:37::i;:::-;1351:283;;;:::o;4786:132:22:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;1129:216:35:-;1531:13:20;:11;:13::i;:::-;1195:12:35::1;::::0;-1:-1:-1;;;1195:12:35;::::1;;;1187:70;;;::::0;-1:-1:-1;;;1187:70:35;;5984:2:37;1187:70:35::1;::::0;::::1;5966:21:37::0;6023:2;6003:18;;;5996:30;6062:34;6042:18;;;6035:62;-1:-1:-1;;;6113:18:37;;;6106:43;6166:19;;1187:70:35::1;5782:409:37::0;1187:70:35::1;1267:14;1273:7;1267:5;:14::i;:::-;-1:-1:-1::0;1315:11:35::1;:13:::0;;::::1;;-1:-1:-1::0;;;1315:13:35;;::::1;::::0;::::1;::::0;;;::::1;;;-1:-1:-1::0;;;;1315:13:35;;::::1;;::::0;;1129:216::o;2184:118:22:-;2247:7;2273:22;2287:7;2273:13;:22::i;866:257:35:-;1531:13:20;:11;:13::i;:::-;949:11:35::1;::::0;940:6:::1;::::0;949:11:::1;-1:-1:-1::0;;;949:11:35;;::::1;::::0;::::1;940:6:::0;::::1;:20;919:114;;;::::0;-1:-1:-1;;;919:114:35;;6398:2:37;919:114:35::1;::::0;::::1;6380:21:37::0;6437:2;6417:18;;;6410:30;6476:34;6456:18;;;6449:62;-1:-1:-1;;;6527:18:37;;;6520:45;6582:19;;919:114:35::1;6196:411:37::0;919:114:35::1;1057:6;::::0;1043:21:::1;::::0;1053:2;;1057:6:::1;;1043:9;:21::i;:::-;-1:-1:-1::0;1098:6:35::1;:8:::0;;::::1;::::0;;::::1;::::0;::::1;;-1:-1:-1::0;;1098:8:35;;::::1;;::::0;;866:257::o;1919:208:22:-;1982:7;-1:-1:-1;;;;;2005:19:22;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:22;;2074:1;2047:30;;;1884:51:37;1857:18;;2047:30:22;1738:203:37;2001:87:22;-1:-1:-1;;;;;;2104:16:22;;;;;:9;:16;;;;;;;1919:208::o;2293:101:20:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2517:93:22:-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:27;3835:8:22;3845;3802:18;:52::i;1640:324:35:-;1813:14;;-1:-1:-1;;;1813:14:35;;;;1792:108;;;;-1:-1:-1;;;1792:108:35;;;;;;;:::i;:::-;1910:47;1933:4;1939:2;1943:7;1952:4;1910:22;:47::i;:::-;1640:324;;;;:::o;2676:255:22:-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:22:o;3927:153::-;-1:-1:-1;;;;;4038:25:22;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;2543:215:20:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:20;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:20;;2700:1:::1;2672:31;::::0;::::1;1884:51:37::0;1857:18;;2672:31:20::1;1738:203:37::0;2623:91:20::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;16214:241:22:-;16277:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:22;;16339:88;;16385:31;;-1:-1:-1;;;16385:31:22;;;;;3053:25:37;;;3026:18;;16385:31:22;2907:177:37;14494:120:22;14574:33;14583:2;14587:7;14596:4;14602;14574:8;:33::i;4142:578::-;-1:-1:-1;;;;;4236:16:22;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:22;;4305:1;4275:33;;;1884:51:37;1857:18;;4275:33:22;1738:203:37;4232:87:22;4537:21;4561:34;4569:2;4573:7;735:10:27;4561:7:22;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:22;:13;-1:-1:-1;;;;;4609:21:22;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:22;;-1:-1:-1;;;;;7371:15:37;;;4653:50:22;;;7353:34:37;7403:18;;;7396:34;;;7466:15;;7446:18;;;7439:43;7288:18;;4653:50:22;7113:375:37;1796:162:20;1710:6;;-1:-1:-1;;;;;1710:6:20;735:10:27;1855:23:20;1851:101;;1901:40;;-1:-1:-1;;;1901:40:20;;735:10:27;1901:40:20;;;1884:51:37;1857:18;;1901:40:20;1738:203:37;11512:227:22;11563:21;11587:40;11603:1;11607:7;11624:1;11587:7;:40::i;:::-;11563:64;-1:-1:-1;;;;;;11641:27:22;;11637:96;;11691:31;;-1:-1:-1;;;11691:31:22;;;;;3053:25:37;;;3026:18;;11691:31:22;2907:177:37;10658:100:22;10725:26;10735:2;10739:7;10725:26;;;;;;;;;;;;:9;:26::i;2912:187:20:-;3004:6;;;-1:-1:-1;;;;;3020:17:20;;;-1:-1:-1;;;;;;3020:17:20;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15667:312:22:-;-1:-1:-1;;;;;15774:22:22;;15770:91;;15819:31;;-1:-1:-1;;;15819:31:22;;-1:-1:-1;;;;;1902:32:37;;15819:31:22;;;1884:51:37;1857:18;;15819:31:22;1738:203:37;15770:91:22;-1:-1:-1;;;;;15870:25:22;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15870:46:22;;;;;;;;;;15931:41;;540::37;;;15931::22;;513:18:37;15931:41:22;;;;;;;15667:312;;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:27;5186:4:22;5192:2;5196:7;5205:4;5138:33;:72::i;760:100:35:-;812:13;844:9;837:16;;;;;:::i;637:698:29:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:29;-1:-1:-1;794:41:29;-1:-1:-1;955:28:29;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:29;-1:-1:-1;;;1175:2:29;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:29;1010:282;1256:21;-1:-1:-1;1312:6:29;637:698;-1:-1:-1;;;637:698:29:o;14796:662:22:-;14956:9;:31;;;-1:-1:-1;;;;;;14969:18:22;;;;14956:31;14952:460;;;15003:13;15019:22;15033:7;15019:13;:22::i;:::-;15003:38;-1:-1:-1;;;;;;15169:18:22;;;;;;:35;;;15200:4;-1:-1:-1;;;;;15191:13:22;:5;-1:-1:-1;;;;;15191:13:22;;;15169:35;:69;;;;;15209:29;15226:5;15233:4;15209:16;:29::i;:::-;15208:30;15169:69;15165:142;;;15265:27;;-1:-1:-1;;;15265:27:22;;-1:-1:-1;;;;;1902:32:37;;15265:27:22;;;1884:51:37;1857:18;;15265:27:22;1738:203:37;15165:142:22;15325:9;15321:81;;;15379:7;15375:2;-1:-1:-1;;;;;15359:28:22;15368:5;-1:-1:-1;;;;;15359:28:22;;;;;;;;;;;15321:81;14989:423;14952:460;-1:-1:-1;;15422:24:22;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15422:29:22;-1:-1:-1;;;;;15422:29:22;;;;;;;;;;14796:662::o;8863:795::-;8949:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:22;;;;9060:18;;;9056:86;;9094:37;9111:4;9117;9123:7;9094:16;:37::i;:::-;-1:-1:-1;;;;;9186:18:22;;;9182:256;;9302:48;9319:1;9323:7;9340:1;9344:5;9302:8;:48::i;:::-;-1:-1:-1;;;;;9393:15:22;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9393:20:22;;;9182:256;-1:-1:-1;;;;;9452:16:22;;;9448:107;;-1:-1:-1;;;;;9512:13:22;;;;;;:9;:13;;;;;:18;;9529:1;9512:18;;;9448:107;9565:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9565:21:22;-1:-1:-1;;;;;9565:21:22;;;;;;;;;9602:27;;9565:16;;9602:27;;;;;;;9647:4;8863:795;-1:-1:-1;;;;8863:795:22:o;10979:207::-;11073:18;11079:2;11083:7;11073:5;:18::i;:::-;11101:78;735:10:27;11157:1:22;11161:2;11165:7;11174:4;873:963:26;-1:-1:-1;;;;;1053:14:26;;;:18;1049:781;;1091:67;;-1:-1:-1;;;1091:67:26;;-1:-1:-1;;;;;1091:36:26;;;;;:67;;1128:8;;1138:4;;1144:7;;1153:4;;1091:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1091:67:26;;;;;;;;-1:-1:-1;;1091:67:26;;;;;;;;;;;;:::i;:::-;;;1087:733;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1448:6;:13;1465:1;1448:18;1444:362;;1552:39;;-1:-1:-1;;;1552:39:26;;-1:-1:-1;;;;;1902:32:37;;1552:39:26;;;1884:51:37;1857:18;;1552:39:26;1738:203:37;1444:362:26;1758:6;1752:13;1743:6;1739:2;1735:15;1728:38;1087:733;-1:-1:-1;;;;;;1205:51:26;;-1:-1:-1;;;1205:51:26;1201:182;;1325:39;;-1:-1:-1;;;1325:39:26;;-1:-1:-1;;;;;1902:32:37;;1325:39:26;;;1884:51:37;1857:18;;1325:39:26;1738:203:37;1201:182:26;1159:238;1087:733;873:963;;;;;:::o;23958:916:32:-;24011:7;;-1:-1:-1;;;24086:17:32;;24082:103;;-1:-1:-1;;;24123:17:32;;;-1:-1:-1;24168:2:32;24158:12;24082:103;24211:8;24202:5;:17;24198:103;;24248:8;24239:17;;;-1:-1:-1;24284:2:32;24274:12;24198:103;24327:8;24318:5;:17;24314:103;;24364:8;24355:17;;;-1:-1:-1;24400:2:32;24390:12;24314:103;24443:7;24434:5;:16;24430:100;;24479:7;24470:16;;;-1:-1:-1;24514:1:32;24504:11;24430:100;24556:7;24547:5;:16;24543:100;;24592:7;24583:16;;;-1:-1:-1;24627:1:32;24617:11;24543:100;24669:7;24660:5;:16;24656:100;;24705:7;24696:16;;;-1:-1:-1;24740:1:32;24730:11;24656:100;24782:7;24773:5;:16;24769:66;;24819:1;24809:11;24861:6;23958:916;-1:-1:-1;;23958:916:32:o;7107:368:22:-;7219:38;7233:5;7240:7;7249;7219:13;:38::i;:::-;7214:255;;-1:-1:-1;;;;;7277:19:22;;7273:186;;7323:31;;-1:-1:-1;;;7323:31:22;;;;;3053:25:37;;;3026:18;;7323:31:22;2907:177:37;7273:186:22;7400:44;;-1:-1:-1;;;7400:44:22;;-1:-1:-1;;;;;8565:32:37;;7400:44:22;;;8547:51:37;8614:18;;;8607:34;;;8520:18;;7400:44:22;8373:274:37;9980:327:22;-1:-1:-1;;;;;10047:16:22;;10043:87;;10086:33;;-1:-1:-1;;;10086:33:22;;10116:1;10086:33;;;1884:51:37;1857:18;;10086:33:22;1738:203:37;10043:87:22;10139:21;10163:32;10171:2;10175:7;10192:1;10163:7;:32::i;:::-;10139:56;-1:-1:-1;;;;;;10209:27:22;;;10205:96;;10259:31;;-1:-1:-1;;;10259:31:22;;10287:1;10259:31;;;1884:51:37;1857:18;;10259:31:22;1738:203:37;6401:272:22;6504:4;-1:-1:-1;;;;;6539:21:22;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:22;:5;-1:-1:-1;;;;;6577:16:22;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;6033:7:22;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6633:32:22;;;6059:24;;6633:32;6577:88;6520:146;6401:272;-1:-1:-1;;;;6401:272:22:o;14:131:37:-;-1:-1:-1;;;;;;88:32:37;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;797:250::-;882:1;892:113;906:6;903:1;900:13;892:113;;;982:11;;;976:18;963:11;;;956:39;928:2;921:10;892:113;;;-1:-1:-1;;1039:1:37;1021:16;;1014:27;797:250::o;1052:271::-;1094:3;1132:5;1126:12;1159:6;1154:3;1147:19;1175:76;1244:6;1237:4;1232:3;1228:14;1221:4;1214:5;1210:16;1175:76;:::i;:::-;1305:2;1284:15;-1:-1:-1;;1280:29:37;1271:39;;;;1312:4;1267:50;;1052:271;-1:-1:-1;;1052:271:37:o;1328:220::-;1477:2;1466:9;1459:21;1440:4;1497:45;1538:2;1527:9;1523:18;1515:6;1497:45;:::i;1553:180::-;1612:6;1665:2;1653:9;1644:7;1640:23;1636:32;1633:52;;;1681:1;1678;1671:12;1633:52;-1:-1:-1;1704:23:37;;1553:180;-1:-1:-1;1553:180:37:o;1946:173::-;2014:20;;-1:-1:-1;;;;;2063:31:37;;2053:42;;2043:70;;2109:1;2106;2099:12;2043:70;1946:173;;;:::o;2124:254::-;2192:6;2200;2253:2;2241:9;2232:7;2228:23;2224:32;2221:52;;;2269:1;2266;2259:12;2221:52;2292:29;2311:9;2292:29;:::i;:::-;2282:39;2368:2;2353:18;;;;2340:32;;-1:-1:-1;;;2124:254:37:o;2383:328::-;2460:6;2468;2476;2529:2;2517:9;2508:7;2504:23;2500:32;2497:52;;;2545:1;2542;2535:12;2497:52;2568:29;2587:9;2568:29;:::i;:::-;2558:39;;2616:38;2650:2;2639:9;2635:18;2616:38;:::i;:::-;2606:48;;2701:2;2690:9;2686:18;2673:32;2663:42;;2383:328;;;;;:::o;2716:186::-;2775:6;2828:2;2816:9;2807:7;2803:23;2799:32;2796:52;;;2844:1;2841;2834:12;2796:52;2867:29;2886:9;2867:29;:::i;3089:347::-;3154:6;3162;3215:2;3203:9;3194:7;3190:23;3186:32;3183:52;;;3231:1;3228;3221:12;3183:52;3254:29;3273:9;3254:29;:::i;:::-;3244:39;;3333:2;3322:9;3318:18;3305:32;3380:5;3373:13;3366:21;3359:5;3356:32;3346:60;;3402:1;3399;3392:12;3346:60;3425:5;3415:15;;;3089:347;;;;;:::o;3441:127::-;3502:10;3497:3;3493:20;3490:1;3483:31;3533:4;3530:1;3523:15;3557:4;3554:1;3547:15;3573:1138;3668:6;3676;3684;3692;3745:3;3733:9;3724:7;3720:23;3716:33;3713:53;;;3762:1;3759;3752:12;3713:53;3785:29;3804:9;3785:29;:::i;:::-;3775:39;;3833:38;3867:2;3856:9;3852:18;3833:38;:::i;:::-;3823:48;;3918:2;3907:9;3903:18;3890:32;3880:42;;3973:2;3962:9;3958:18;3945:32;3996:18;4037:2;4029:6;4026:14;4023:34;;;4053:1;4050;4043:12;4023:34;4091:6;4080:9;4076:22;4066:32;;4136:7;4129:4;4125:2;4121:13;4117:27;4107:55;;4158:1;4155;4148:12;4107:55;4194:2;4181:16;4216:2;4212;4209:10;4206:36;;;4222:18;;:::i;:::-;4297:2;4291:9;4265:2;4351:13;;-1:-1:-1;;4347:22:37;;;4371:2;4343:31;4339:40;4327:53;;;4395:18;;;4415:22;;;4392:46;4389:72;;;4441:18;;:::i;:::-;4481:10;4477:2;4470:22;4516:2;4508:6;4501:18;4556:7;4551:2;4546;4542;4538:11;4534:20;4531:33;4528:53;;;4577:1;4574;4567:12;4528:53;4633:2;4628;4624;4620:11;4615:2;4607:6;4603:15;4590:46;4678:1;4673:2;4668;4660:6;4656:15;4652:24;4645:35;4699:6;4689:16;;;;;;;3573:1138;;;;;;;:::o;4716:260::-;4784:6;4792;4845:2;4833:9;4824:7;4820:23;4816:32;4813:52;;;4861:1;4858;4851:12;4813:52;4884:29;4903:9;4884:29;:::i;:::-;4874:39;;4932:38;4966:2;4955:9;4951:18;4932:38;:::i;:::-;4922:48;;4716:260;;;;;:::o;4981:380::-;5060:1;5056:12;;;;5103;;;5124:61;;5178:4;5170:6;5166:17;5156:27;;5124:61;5231:2;5223:6;5220:14;5200:18;5197:38;5194:161;;5277:10;5272:3;5268:20;5265:1;5258:31;5312:4;5309:1;5302:15;5340:4;5337:1;5330:15;5194:161;;4981:380;;;:::o;5366:411::-;5568:2;5550:21;;;5607:2;5587:18;;;5580:30;5646:34;5641:2;5626:18;;5619:62;-1:-1:-1;;;5712:2:37;5697:18;;5690:45;5767:3;5752:19;;5366:411::o;6612:496::-;6791:3;6829:6;6823:13;6845:66;6904:6;6899:3;6892:4;6884:6;6880:17;6845:66;:::i;:::-;6974:13;;6933:16;;;;6996:70;6974:13;6933:16;7043:4;7031:17;;6996:70;:::i;:::-;7082:20;;6612:496;-1:-1:-1;;;;6612:496:37:o;7625:489::-;-1:-1:-1;;;;;7894:15:37;;;7876:34;;7946:15;;7941:2;7926:18;;7919:43;7993:2;7978:18;;7971:34;;;8041:3;8036:2;8021:18;;8014:31;;;7819:4;;8062:46;;8088:19;;8080:6;8062:46;:::i;:::-;8054:54;7625:489;-1:-1:-1;;;;;;7625:489:37:o;8119:249::-;8188:6;8241:2;8229:9;8220:7;8216:23;8212:32;8209:52;;;8257:1;8254;8247:12;8209:52;8289:9;8283:16;8308:30;8332:5;8308:30;:::i',
    linkReferences: {},
  },
  methodIdentifiers: {
    'approve(address,uint256)': '095ea7b3',
    'balanceOf(address)': '70a08231',
    'burn(uint256)': '42966c68',
    'getApproved(uint256)': '081812fc',
    'isApprovedForAll(address,address)': 'e985e9c5',
    'isRefundable()': '2c1fecfe',
    'isTransferable()': '2121dc75',
    'mint(address)': '6a627842',
    'name()': '06fdde03',
    'owner()': '8da5cb5b',
    'ownerOf(uint256)': '6352211e',
    'renounceOwnership()': '715018a6',
    'safeTransferFrom(address,address,uint256)': '42842e0e',
    'safeTransferFrom(address,address,uint256,bytes)': 'b88d4fde',
    'setApprovalForAll(address,bool)': 'a22cb465',
    'supply()': '047fc9aa',
    'supportsInterface(bytes4)': '01ffc9a7',
    'symbol()': '95d89b41',
    'tokenURI(uint256)': 'c87b56dd',
    'totalSupply()': '18160ddd',
    'transferFrom(address,address,uint256)': '23b872dd',
    'transferOwnership(address)': 'f2fde38b',
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint64","name":"totalSupply_","type":"uint64"},{"internalType":"bool","name":"isTransferable_","type":"bool"},{"internalType":"bool","name":"isRefundable_","type":"bool"},{"internalType":"string","name":"baseURI_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRefundable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isTransferable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"supply","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can\'t be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/Ticket.sol":"Ticket"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","license":"MIT","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"]},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229","license":"MIT","urls":["bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155","dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"]},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x4e7a30dafa83254008b02982696931abb1bcd762e201bba1d8ae77cb7654b62d","license":"MIT","urls":["bzz-raw://3dc64b74b4ef44f669a75edf93cadaf24ae390846751f60c3b38bf9ceba115c7","dweb:/ipfs/QmZA2GuNXgf8832j532kctoFgrK679yHUr6ZJngUQySF6d"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de","license":"MIT","urls":["bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827","dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b","license":"MIT","urls":["bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66","dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt"]},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1","license":"MIT","urls":["bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02","dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"]},"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol":{"keccak256":"0x01c061c84b49b81408a3baa6897e3fb9a2a70ff4356216c3398cbdb9d628ede9","license":"MIT","urls":["bzz-raw://281503c4e1df1caf50a45ff4852f46da7e40881ebd07856548a90f13bf2dc53a","dweb:/ipfs/QmW5VobCbTcvSXPE2nKKzUnhV6rofkvpc3acZ8rntMnMmW"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a","license":"MIT","urls":["bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3","dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","license":"MIT","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"]},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e","license":"MIT","urls":["bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9","dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","license":"MIT","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xc3a38f6236b9f11703164f1c52a5d423f02f01ee689d58d5a35d1a48ad5b9d88","license":"MIT","urls":["bzz-raw://4ee652cbb0266d2336107760205ea72fecf6f8127e32361d1a209016e0f8271d","dweb:/ipfs/QmefTVVswMMF6r372icwDF6DqNfzkEX5mzgSpbxdpgaUKj"]},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e","license":"MIT","urls":["bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047","dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f","license":"MIT","urls":["bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512","dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ"]},"src/Ticket.sol":{"keccak256":"0xeaa8b13aecca4127dd79a1875a57d1cdcb5cebe480fec6740f9e208204bcc04c","license":"MIT","urls":["bzz-raw://ea7c388431c4bc83f3f73a068ef3bd655f16ecb9a5ff9a3eb3b33500207d7ec4","dweb:/ipfs/QmXxJuTeCwfKf1awezXTCg78wyc7UXWzmnAvQ3PVSCm5f8"]}},"version":1}',
  metadata: {
    compiler: {
      version: '0.8.20+commit.a1b79de6',
    },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [
            {
              internalType: 'string',
              name: 'name_',
              type: 'string',
            },
            {
              internalType: 'string',
              name: 'symbol_',
              type: 'string',
            },
            {
              internalType: 'uint64',
              name: 'totalSupply_',
              type: 'uint64',
            },
            {
              internalType: 'bool',
              name: 'isTransferable_',
              type: 'bool',
            },
            {
              internalType: 'bool',
              name: 'isRefundable_',
              type: 'bool',
            },
            {
              internalType: 'string',
              name: 'baseURI_',
              type: 'string',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'constructor',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'sender',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC721IncorrectOwner',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'ERC721InsufficientApproval',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'approver',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC721InvalidApprover',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC721InvalidOperator',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC721InvalidOwner',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'receiver',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC721InvalidReceiver',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'sender',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC721InvalidSender',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'ERC721NonexistentToken',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'OwnableInvalidOwner',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'account',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'OwnableUnauthorizedAccount',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'approved',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'Approval',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'ApprovalForAll',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'previousOwner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'OwnershipTransferred',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'Transfer',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'approve',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'balanceOf',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'burn',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'getApproved',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'isApprovedForAll',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'isRefundable',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'isTransferable',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'mint',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'name',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'owner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'ownerOf',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'renounceOwnership',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'safeTransferFrom',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
            {
              internalType: 'bytes',
              name: 'data',
              type: 'bytes',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'safeTransferFrom',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setApprovalForAll',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'supply',
          outputs: [
            {
              internalType: 'uint64',
              name: '',
              type: 'uint64',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'bytes4',
              name: 'interfaceId',
              type: 'bytes4',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'supportsInterface',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'symbol',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'tokenURI',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'totalSupply',
          outputs: [
            {
              internalType: 'uint64',
              name: '',
              type: 'uint64',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transferFrom',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transferOwnership',
        },
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          'approve(address,uint256)': {
            details: 'See {IERC721-approve}.',
          },
          'balanceOf(address)': {
            details: 'See {IERC721-balanceOf}.',
          },
          'getApproved(uint256)': {
            details: 'See {IERC721-getApproved}.',
          },
          'isApprovedForAll(address,address)': {
            details: 'See {IERC721-isApprovedForAll}.',
          },
          'name()': {
            details: 'See {IERC721Metadata-name}.',
          },
          'owner()': {
            details: 'Returns the address of the current owner.',
          },
          'ownerOf(uint256)': {
            details: 'See {IERC721-ownerOf}.',
          },
          'renounceOwnership()': {
            details:
              'Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.',
          },
          'safeTransferFrom(address,address,uint256)': {
            details: 'See {IERC721-safeTransferFrom}.',
          },
          'safeTransferFrom(address,address,uint256,bytes)': {
            details: 'See {IERC721-safeTransferFrom}.',
          },
          'setApprovalForAll(address,bool)': {
            details: 'See {IERC721-setApprovalForAll}.',
          },
          'supportsInterface(bytes4)': {
            details: 'See {IERC165-supportsInterface}.',
          },
          'symbol()': {
            details: 'See {IERC721Metadata-symbol}.',
          },
          'tokenURI(uint256)': {
            details: 'See {IERC721Metadata-tokenURI}.',
          },
          'transferFrom(address,address,uint256)': {
            details: 'See {IERC721-transferFrom}.',
          },
          'transferOwnership(address)': {
            details:
              'Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.',
          },
        },
        version: 1,
      },
      userdoc: {
        kind: 'user',
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
        'ds-test/=lib/forge-std/lib/ds-test/src/',
        'erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/',
        'forge-std/=lib/forge-std/src/',
        'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: 'ipfs',
      },
      compilationTarget: {
        'src/Ticket.sol': 'Ticket',
      },
      libraries: {},
    },
    sources: {
      'lib/openzeppelin-contracts/contracts/access/Ownable.sol': {
        keccak256:
          '0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb',
        urls: [
          'bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6',
          'dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol': {
        keccak256:
          '0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229',
        urls: [
          'bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155',
          'dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol': {
        keccak256:
          '0x4e7a30dafa83254008b02982696931abb1bcd762e201bba1d8ae77cb7654b62d',
        urls: [
          'bzz-raw://3dc64b74b4ef44f669a75edf93cadaf24ae390846751f60c3b38bf9ceba115c7',
          'dweb:/ipfs/QmZA2GuNXgf8832j532kctoFgrK679yHUr6ZJngUQySF6d',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
        keccak256:
          '0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de',
        urls: [
          'bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827',
          'dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol': {
        keccak256:
          '0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b',
        urls: [
          'bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66',
          'dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol':
        {
          keccak256:
            '0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1',
          urls: [
            'bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02',
            'dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE',
          ],
          license: 'MIT',
        },
      'lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol':
        {
          keccak256:
            '0x01c061c84b49b81408a3baa6897e3fb9a2a70ff4356216c3398cbdb9d628ede9',
          urls: [
            'bzz-raw://281503c4e1df1caf50a45ff4852f46da7e40881ebd07856548a90f13bf2dc53a',
            'dweb:/ipfs/QmW5VobCbTcvSXPE2nKKzUnhV6rofkvpc3acZ8rntMnMmW',
          ],
          license: 'MIT',
        },
      'lib/openzeppelin-contracts/contracts/utils/Context.sol': {
        keccak256:
          '0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2',
        urls: [
          'bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12',
          'dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/Panic.sol': {
        keccak256:
          '0x29074fe5a74bb024c57b3570abf6c74d8bceed3438694d470fd0166a3ecd196a',
        urls: [
          'bzz-raw://f4f8435ccbc56e384f4cc9ac9ff491cf30a82f2beac00e33ccc2cf8af3f77cc3',
          'dweb:/ipfs/QmUKJXxTe6nn1qfgnX8xbnboNNAPUuEmJyGqMZCKNiFBgn',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
        keccak256:
          '0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792',
        urls: [
          'bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453',
          'dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol': {
        keccak256:
          '0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e',
        urls: [
          'bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9',
          'dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
        keccak256:
          '0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c',
        urls: [
          'bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e',
          'dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
        keccak256:
          '0xc3a38f6236b9f11703164f1c52a5d423f02f01ee689d58d5a35d1a48ad5b9d88',
        urls: [
          'bzz-raw://4ee652cbb0266d2336107760205ea72fecf6f8127e32361d1a209016e0f8271d',
          'dweb:/ipfs/QmefTVVswMMF6r372icwDF6DqNfzkEX5mzgSpbxdpgaUKj',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
        keccak256:
          '0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e',
        urls: [
          'bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047',
          'dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol': {
        keccak256:
          '0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f',
        urls: [
          'bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512',
          'dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ',
        ],
        license: 'MIT',
      },
      'src/Ticket.sol': {
        keccak256:
          '0xeaa8b13aecca4127dd79a1875a57d1cdcb5cebe480fec6740f9e208204bcc04c',
        urls: [
          'bzz-raw://ea7c388431c4bc83f3f73a068ef3bd655f16ecb9a5ff9a3eb3b33500207d7ec4',
          'dweb:/ipfs/QmXxJuTeCwfKf1awezXTCg78wyc7UXWzmnAvQ3PVSCm5f8',
        ],
        license: 'MIT',
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: 'src/Ticket.sol',
    id: 50346,
    exportedSymbols: {
      Context: [46411],
      ERC165: [46742],
      ERC721: [46141],
      ERC721Utils: [46381],
      IERC165: [46754],
      IERC721: [46258],
      IERC721Errors: [45137],
      IERC721Metadata: [46304],
      Ownable: [45047],
      Strings: [46718],
      Ticket: [50345],
    },
    nodeType: 'SourceUnit',
    src: '32:1935:35',
    nodes: [
      {
        id: 50183,
        nodeType: 'PragmaDirective',
        src: '32:24:35',
        nodes: [],
        literals: ['solidity', '^', '0.8', '.20'],
      },
      {
        id: 50184,
        nodeType: 'ImportDirective',
        src: '58:57:35',
        nodes: [],
        absolutePath:
          'lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol',
        file: '@openzeppelin/contracts/token/ERC721/ERC721.sol',
        nameLocation: '-1:-1:-1',
        scope: 50346,
        sourceUnit: 46142,
        symbolAliases: [],
        unitAlias: '',
      },
      {
        id: 50185,
        nodeType: 'ImportDirective',
        src: '116:52:35',
        nodes: [],
        absolutePath: 'lib/openzeppelin-contracts/contracts/access/Ownable.sol',
        file: '@openzeppelin/contracts/access/Ownable.sol',
        nameLocation: '-1:-1:-1',
        scope: 50346,
        sourceUnit: 45048,
        symbolAliases: [],
        unitAlias: '',
      },
      {
        id: 50345,
        nodeType: 'ContractDefinition',
        src: '170:1796:35',
        nodes: [
          {
            id: 50191,
            nodeType: 'VariableDeclaration',
            src: '211:25:35',
            nodes: [],
            constant: false,
            functionSelector: '18160ddd',
            mutability: 'mutable',
            name: 'totalSupply',
            nameLocation: '225:11:35',
            scope: 50345,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint64',
              typeString: 'uint64',
            },
            typeName: {
              id: 50190,
              name: 'uint64',
              nodeType: 'ElementaryTypeName',
              src: '211:6:35',
              typeDescriptions: {
                typeIdentifier: 't_uint64',
                typeString: 'uint64',
              },
            },
            visibility: 'public',
          },
          {
            id: 50193,
            nodeType: 'VariableDeclaration',
            src: '242:20:35',
            nodes: [],
            constant: false,
            functionSelector: '047fc9aa',
            mutability: 'mutable',
            name: 'supply',
            nameLocation: '256:6:35',
            scope: 50345,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint64',
              typeString: 'uint64',
            },
            typeName: {
              id: 50192,
              name: 'uint64',
              nodeType: 'ElementaryTypeName',
              src: '242:6:35',
              typeDescriptions: {
                typeIdentifier: 't_uint64',
                typeString: 'uint64',
              },
            },
            visibility: 'public',
          },
          {
            id: 50195,
            nodeType: 'VariableDeclaration',
            src: '268:26:35',
            nodes: [],
            constant: false,
            functionSelector: '2121dc75',
            mutability: 'mutable',
            name: 'isTransferable',
            nameLocation: '280:14:35',
            scope: 50345,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_bool',
              typeString: 'bool',
            },
            typeName: {
              id: 50194,
              name: 'bool',
              nodeType: 'ElementaryTypeName',
              src: '268:4:35',
              typeDescriptions: {
                typeIdentifier: 't_bool',
                typeString: 'bool',
              },
            },
            visibility: 'public',
          },
          {
            id: 50197,
            nodeType: 'VariableDeclaration',
            src: '300:24:35',
            nodes: [],
            constant: false,
            functionSelector: '2c1fecfe',
            mutability: 'mutable',
            name: 'isRefundable',
            nameLocation: '312:12:35',
            scope: 50345,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_bool',
              typeString: 'bool',
            },
            typeName: {
              id: 50196,
              name: 'bool',
              nodeType: 'ElementaryTypeName',
              src: '300:4:35',
              typeDescriptions: {
                typeIdentifier: 't_bool',
                typeString: 'bool',
              },
            },
            visibility: 'public',
          },
          {
            id: 50199,
            nodeType: 'VariableDeclaration',
            src: '330:24:35',
            nodes: [],
            constant: false,
            mutability: 'mutable',
            name: '__baseURI',
            nameLocation: '345:9:35',
            scope: 50345,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_string_storage',
              typeString: 'string',
            },
            typeName: {
              id: 50198,
              name: 'string',
              nodeType: 'ElementaryTypeName',
              src: '330:6:35',
              typeDescriptions: {
                typeIdentifier: 't_string_storage_ptr',
                typeString: 'string',
              },
            },
            visibility: 'private',
          },
          {
            id: 50239,
            nodeType: 'FunctionDefinition',
            src: '361:393:35',
            nodes: [],
            body: {
              id: 50238,
              nodeType: 'Block',
              src: '601:153:35',
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 50224,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 50222,
                      name: 'totalSupply',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50191,
                      src: '611:11:35',
                      typeDescriptions: {
                        typeIdentifier: 't_uint64',
                        typeString: 'uint64',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 50223,
                      name: 'totalSupply_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50205,
                      src: '625:12:35',
                      typeDescriptions: {
                        typeIdentifier: 't_uint64',
                        typeString: 'uint64',
                      },
                    },
                    src: '611:26:35',
                    typeDescriptions: {
                      typeIdentifier: 't_uint64',
                      typeString: 'uint64',
                    },
                  },
                  id: 50225,
                  nodeType: 'ExpressionStatement',
                  src: '611:26:35',
                },
                {
                  expression: {
                    id: 50228,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 50226,
                      name: 'isTransferable',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50195,
                      src: '647:14:35',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 50227,
                      name: 'isTransferable_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50207,
                      src: '664:15:35',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    src: '647:32:35',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 50229,
                  nodeType: 'ExpressionStatement',
                  src: '647:32:35',
                },
                {
                  expression: {
                    id: 50232,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 50230,
                      name: 'isRefundable',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50197,
                      src: '689:12:35',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 50231,
                      name: 'isRefundable_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50209,
                      src: '704:13:35',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    src: '689:28:35',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 50233,
                  nodeType: 'ExpressionStatement',
                  src: '689:28:35',
                },
                {
                  expression: {
                    id: 50236,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 50234,
                      name: '__baseURI',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50199,
                      src: '727:9:35',
                      typeDescriptions: {
                        typeIdentifier: 't_string_storage',
                        typeString: 'string storage ref',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 50235,
                      name: 'baseURI_',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 50211,
                      src: '739:8:35',
                      typeDescriptions: {
                        typeIdentifier: 't_string_memory_ptr',
                        typeString: 'string memory',
                      },
                    },
                    src: '727:20:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage',
                      typeString: 'string storage ref',
                    },
                  },
                  id: 50237,
                  nodeType: 'ExpressionStatement',
                  src: '727:20:35',
                },
              ],
            },
            implemented: true,
            kind: 'constructor',
            modifiers: [
              {
                arguments: [
                  {
                    id: 50214,
                    name: 'name_',
                    nodeType: 'Identifier',
                    overloadedDeclarations: [],
                    referencedDeclaration: 50201,
                    src: '565:5:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_memory_ptr',
                      typeString: 'string memory',
                    },
                  },
                  {
                    id: 50215,
                    name: 'symbol_',
                    nodeType: 'Identifier',
                    overloadedDeclarations: [],
                    referencedDeclaration: 50203,
                    src: '572:7:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_memory_ptr',
                      typeString: 'string memory',
                    },
                  },
                ],
                id: 50216,
                kind: 'baseConstructorSpecifier',
                modifierName: {
                  id: 50213,
                  name: 'ERC721',
                  nameLocations: ['558:6:35'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 46141,
                  src: '558:6:35',
                },
                nodeType: 'ModifierInvocation',
                src: '558:22:35',
              },
              {
                arguments: [
                  {
                    expression: {
                      id: 50218,
                      name: 'msg',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: -15,
                      src: '589:3:35',
                      typeDescriptions: {
                        typeIdentifier: 't_magic_message',
                        typeString: 'msg',
                      },
                    },
                    id: 50219,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    memberLocation: '593:6:35',
                    memberName: 'sender',
                    nodeType: 'MemberAccess',
                    src: '589:10:35',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                ],
                id: 50220,
                kind: 'baseConstructorSpecifier',
                modifierName: {
                  id: 50217,
                  name: 'Ownable',
                  nameLocations: ['581:7:35'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 45047,
                  src: '581:7:35',
                },
                nodeType: 'ModifierInvocation',
                src: '581:19:35',
              },
            ],
            name: '',
            nameLocation: '-1:-1:-1',
            parameters: {
              id: 50212,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 50201,
                  mutability: 'mutable',
                  name: 'name_',
                  nameLocation: '396:5:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50239,
                  src: '382:19:35',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string',
                  },
                  typeName: {
                    id: 50200,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '382:6:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50203,
                  mutability: 'mutable',
                  name: 'symbol_',
                  nameLocation: '425:7:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50239,
                  src: '411:21:35',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string',
                  },
                  typeName: {
                    id: 50202,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '411:6:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50205,
                  mutability: 'mutable',
                  name: 'totalSupply_',
                  nameLocation: '449:12:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50239,
                  src: '442:19:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint64',
                    typeString: 'uint64',
                  },
                  typeName: {
                    id: 50204,
                    name: 'uint64',
                    nodeType: 'ElementaryTypeName',
                    src: '442:6:35',
                    typeDescriptions: {
                      typeIdentifier: 't_uint64',
                      typeString: 'uint64',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50207,
                  mutability: 'mutable',
                  name: 'isTransferable_',
                  nameLocation: '476:15:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50239,
                  src: '471:20:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_bool',
                    typeString: 'bool',
                  },
                  typeName: {
                    id: 50206,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '471:4:35',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50209,
                  mutability: 'mutable',
                  name: 'isRefundable_',
                  nameLocation: '506:13:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50239,
                  src: '501:18:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_bool',
                    typeString: 'bool',
                  },
                  typeName: {
                    id: 50208,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '501:4:35',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50211,
                  mutability: 'mutable',
                  name: 'baseURI_',
                  nameLocation: '543:8:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50239,
                  src: '529:22:35',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string',
                  },
                  typeName: {
                    id: 50210,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '529:6:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '372:185:35',
            },
            returnParameters: {
              id: 50221,
              nodeType: 'ParameterList',
              parameters: [],
              src: '601:0:35',
            },
            scope: 50345,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 50248,
            nodeType: 'FunctionDefinition',
            src: '760:100:35',
            nodes: [],
            body: {
              id: 50247,
              nodeType: 'Block',
              src: '827:33:35',
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 50245,
                    name: '__baseURI',
                    nodeType: 'Identifier',
                    overloadedDeclarations: [],
                    referencedDeclaration: 50199,
                    src: '844:9:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage',
                      typeString: 'string storage ref',
                    },
                  },
                  functionReturnParameters: 50244,
                  id: 50246,
                  nodeType: 'Return',
                  src: '837:16:35',
                },
              ],
            },
            baseFunctions: [45389],
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_baseURI',
            nameLocation: '769:8:35',
            overrides: {
              id: 50241,
              nodeType: 'OverrideSpecifier',
              overrides: [],
              src: '794:8:35',
            },
            parameters: {
              id: 50240,
              nodeType: 'ParameterList',
              parameters: [],
              src: '777:2:35',
            },
            returnParameters: {
              id: 50244,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 50243,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 50248,
                  src: '812:13:35',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_string_memory_ptr',
                    typeString: 'string',
                  },
                  typeName: {
                    id: 50242,
                    name: 'string',
                    nodeType: 'ElementaryTypeName',
                    src: '812:6:35',
                    typeDescriptions: {
                      typeIdentifier: 't_string_storage_ptr',
                      typeString: 'string',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '811:15:35',
            },
            scope: 50345,
            stateMutability: 'view',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 50272,
            nodeType: 'FunctionDefinition',
            src: '866:257:35',
            nodes: [],
            body: {
              id: 50271,
              nodeType: 'Block',
              src: '909:214:35',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_uint64',
                          typeString: 'uint64',
                        },
                        id: 50258,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 50256,
                          name: 'supply',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 50193,
                          src: '940:6:35',
                          typeDescriptions: {
                            typeIdentifier: 't_uint64',
                            typeString: 'uint64',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '<',
                        rightExpression: {
                          id: 50257,
                          name: 'totalSupply',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 50191,
                          src: '949:11:35',
                          typeDescriptions: {
                            typeIdentifier: 't_uint64',
                            typeString: 'uint64',
                          },
                        },
                        src: '940:20:35',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue:
                          '4552433732313a207469636b657420697320736f6c64206f75742c206d696e74206973206e6f7420616c6c6f776564',
                        id: 50259,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '974:49:35',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_bdf2763a6fdf5985bf362d1beee1be608559e27eca0b82438a3744be25d4e869',
                          typeString:
                            'literal_string "ERC721: ticket is sold out, mint is not allowed"',
                        },
                        value:
                          'ERC721: ticket is sold out, mint is not allowed',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_bdf2763a6fdf5985bf362d1beee1be608559e27eca0b82438a3744be25d4e869',
                          typeString:
                            'literal_string "ERC721: ticket is sold out, mint is not allowed"',
                        },
                      ],
                      id: 50255,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: '919:7:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 50260,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '919:114:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50261,
                  nodeType: 'ExpressionStatement',
                  src: '919:114:35',
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 50263,
                        name: 'to',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50250,
                        src: '1053:2:35',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 50264,
                        name: 'supply',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50193,
                        src: '1057:6:35',
                        typeDescriptions: {
                          typeIdentifier: 't_uint64',
                          typeString: 'uint64',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint64',
                          typeString: 'uint64',
                        },
                      ],
                      id: 50262,
                      name: '_safeMint',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [45819, 45849],
                      referencedDeclaration: 45819,
                      src: '1043:9:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)',
                      },
                    },
                    id: 50265,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1043:21:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50266,
                  nodeType: 'ExpressionStatement',
                  src: '1043:21:35',
                },
                {
                  id: 50270,
                  nodeType: 'UncheckedBlock',
                  src: '1074:43:35',
                  statements: [
                    {
                      expression: {
                        id: 50268,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'UnaryOperation',
                        operator: '++',
                        prefix: false,
                        src: '1098:8:35',
                        subExpression: {
                          id: 50267,
                          name: 'supply',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 50193,
                          src: '1098:6:35',
                          typeDescriptions: {
                            typeIdentifier: 't_uint64',
                            typeString: 'uint64',
                          },
                        },
                        typeDescriptions: {
                          typeIdentifier: 't_uint64',
                          typeString: 'uint64',
                        },
                      },
                      id: 50269,
                      nodeType: 'ExpressionStatement',
                      src: '1098:8:35',
                    },
                  ],
                },
              ],
            },
            functionSelector: '6a627842',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 50253,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 50252,
                  name: 'onlyOwner',
                  nameLocations: ['899:9:35'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 44958,
                  src: '899:9:35',
                },
                nodeType: 'ModifierInvocation',
                src: '899:9:35',
              },
            ],
            name: 'mint',
            nameLocation: '875:4:35',
            parameters: {
              id: 50251,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 50250,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '888:2:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50272,
                  src: '880:10:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 50249,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '880:7:35',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '879:12:35',
            },
            returnParameters: {
              id: 50254,
              nodeType: 'ParameterList',
              parameters: [],
              src: '909:0:35',
            },
            scope: 50345,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 50293,
            nodeType: 'FunctionDefinition',
            src: '1129:216:35',
            nodes: [],
            body: {
              id: 50292,
              nodeType: 'Block',
              src: '1177:168:35',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 50280,
                        name: 'isRefundable',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50197,
                        src: '1195:12:35',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue:
                          '4552433732313a20726566756e64206973206e6f7420616c6c6f77656420666f722074686973207469636b6574',
                        id: 50281,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1209:47:35',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_379b8eba99f91688d4c051e6cdb7e828ff6efcf6d74fd89eb0c3d8b080b952c2',
                          typeString:
                            'literal_string "ERC721: refund is not allowed for this ticket"',
                        },
                        value: 'ERC721: refund is not allowed for this ticket',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_379b8eba99f91688d4c051e6cdb7e828ff6efcf6d74fd89eb0c3d8b080b952c2',
                          typeString:
                            'literal_string "ERC721: refund is not allowed for this ticket"',
                        },
                      ],
                      id: 50279,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: '1187:7:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 50282,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1187:70:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50283,
                  nodeType: 'ExpressionStatement',
                  src: '1187:70:35',
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 50285,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50274,
                        src: '1273:7:35',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 50284,
                      name: '_burn',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 45882,
                      src: '1267:5:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_nonpayable$_t_uint256_$returns$__$',
                        typeString: 'function (uint256)',
                      },
                    },
                    id: 50286,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1267:14:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50287,
                  nodeType: 'ExpressionStatement',
                  src: '1267:14:35',
                },
                {
                  id: 50291,
                  nodeType: 'UncheckedBlock',
                  src: '1291:48:35',
                  statements: [
                    {
                      expression: {
                        id: 50289,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'UnaryOperation',
                        operator: '++',
                        prefix: false,
                        src: '1315:13:35',
                        subExpression: {
                          id: 50288,
                          name: 'totalSupply',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 50191,
                          src: '1315:11:35',
                          typeDescriptions: {
                            typeIdentifier: 't_uint64',
                            typeString: 'uint64',
                          },
                        },
                        typeDescriptions: {
                          typeIdentifier: 't_uint64',
                          typeString: 'uint64',
                        },
                      },
                      id: 50290,
                      nodeType: 'ExpressionStatement',
                      src: '1315:13:35',
                    },
                  ],
                },
              ],
            },
            functionSelector: '42966c68',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 50277,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 50276,
                  name: 'onlyOwner',
                  nameLocations: ['1167:9:35'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 44958,
                  src: '1167:9:35',
                },
                nodeType: 'ModifierInvocation',
                src: '1167:9:35',
              },
            ],
            name: 'burn',
            nameLocation: '1138:4:35',
            parameters: {
              id: 50275,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 50274,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '1151:7:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50293,
                  src: '1143:15:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 50273,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1143:7:35',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '1142:17:35',
            },
            returnParameters: {
              id: 50278,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1177:0:35',
            },
            scope: 50345,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 50317,
            nodeType: 'FunctionDefinition',
            src: '1351:283:35',
            nodes: [],
            body: {
              id: 50316,
              nodeType: 'Block',
              src: '1462:172:35',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 50304,
                        name: 'isTransferable',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50195,
                        src: '1493:14:35',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue:
                          '4552433732313a207472616e73666572206973206e6f7420616c6c6f77656420666f722074686973207469636b6574',
                        id: 50305,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1521:49:35',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_010f2e9ca754b6e940817acdebd469ab48af60d0be89f2455bbfaaae9641bf89',
                          typeString:
                            'literal_string "ERC721: transfer is not allowed for this ticket"',
                        },
                        value:
                          'ERC721: transfer is not allowed for this ticket',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_010f2e9ca754b6e940817acdebd469ab48af60d0be89f2455bbfaaae9641bf89',
                          typeString:
                            'literal_string "ERC721: transfer is not allowed for this ticket"',
                        },
                      ],
                      id: 50303,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: '1472:7:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 50306,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1472:108:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50307,
                  nodeType: 'ExpressionStatement',
                  src: '1472:108:35',
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 50311,
                        name: 'from',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50295,
                        src: '1609:4:35',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 50312,
                        name: 'to',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50297,
                        src: '1615:2:35',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 50313,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50299,
                        src: '1619:7:35',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      expression: {
                        id: 50308,
                        name: 'super',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -25,
                        src: '1590:5:35',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_super$_Ticket_$50345_$',
                          typeString: 'type(contract super Ticket)',
                        },
                      },
                      id: 50310,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '1596:12:35',
                      memberName: 'transferFrom',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 45501,
                      src: '1590:18:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,address,uint256)',
                      },
                    },
                    id: 50314,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1590:37:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50315,
                  nodeType: 'ExpressionStatement',
                  src: '1590:37:35',
                },
              ],
            },
            baseFunctions: [45501],
            functionSelector: '23b872dd',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'transferFrom',
            nameLocation: '1360:12:35',
            overrides: {
              id: 50301,
              nodeType: 'OverrideSpecifier',
              overrides: [],
              src: '1453:8:35',
            },
            parameters: {
              id: 50300,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 50295,
                  mutability: 'mutable',
                  name: 'from',
                  nameLocation: '1390:4:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50317,
                  src: '1382:12:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 50294,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '1382:7:35',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50297,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '1412:2:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50317,
                  src: '1404:10:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 50296,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '1404:7:35',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50299,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '1432:7:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50317,
                  src: '1424:15:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 50298,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1424:7:35',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '1372:73:35',
            },
            returnParameters: {
              id: 50302,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1462:0:35',
            },
            scope: 50345,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 50344,
            nodeType: 'FunctionDefinition',
            src: '1640:324:35',
            nodes: [],
            body: {
              id: 50343,
              nodeType: 'Block',
              src: '1782:182:35',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 50330,
                        name: 'isTransferable',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50195,
                        src: '1813:14:35',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      {
                        hexValue:
                          '4552433732313a207472616e73666572206973206e6f7420616c6c6f77656420666f722074686973207469636b6574',
                        id: 50331,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '1841:49:35',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_010f2e9ca754b6e940817acdebd469ab48af60d0be89f2455bbfaaae9641bf89',
                          typeString:
                            'literal_string "ERC721: transfer is not allowed for this ticket"',
                        },
                        value:
                          'ERC721: transfer is not allowed for this ticket',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                        {
                          typeIdentifier:
                            't_stringliteral_010f2e9ca754b6e940817acdebd469ab48af60d0be89f2455bbfaaae9641bf89',
                          typeString:
                            'literal_string "ERC721: transfer is not allowed for this ticket"',
                        },
                      ],
                      id: 50329,
                      name: 'require',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: '1792:7:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$',
                        typeString: 'function (bool,string memory) pure',
                      },
                    },
                    id: 50332,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1792:108:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50333,
                  nodeType: 'ExpressionStatement',
                  src: '1792:108:35',
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 50337,
                        name: 'from',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50319,
                        src: '1933:4:35',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 50338,
                        name: 'to',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50321,
                        src: '1939:2:35',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 50339,
                        name: 'tokenId',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50323,
                        src: '1943:7:35',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 50340,
                        name: 'data',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50325,
                        src: '1952:4:35',
                        typeDescriptions: {
                          typeIdentifier: 't_bytes_memory_ptr',
                          typeString: 'bytes memory',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_bytes_memory_ptr',
                          typeString: 'bytes memory',
                        },
                      ],
                      expression: {
                        id: 50334,
                        name: 'super',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -25,
                        src: '1910:5:35',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_super$_Ticket_$50345_$',
                          typeString: 'type(contract super Ticket)',
                        },
                      },
                      id: 50336,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '1916:16:35',
                      memberName: 'safeTransferFrom',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 45549,
                      src: '1910:22:35',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$',
                        typeString:
                          'function (address,address,uint256,bytes memory)',
                      },
                    },
                    id: 50341,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '1910:47:35',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 50342,
                  nodeType: 'ExpressionStatement',
                  src: '1910:47:35',
                },
              ],
            },
            baseFunctions: [45549],
            functionSelector: 'b88d4fde',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'safeTransferFrom',
            nameLocation: '1649:16:35',
            overrides: {
              id: 50327,
              nodeType: 'OverrideSpecifier',
              overrides: [],
              src: '1773:8:35',
            },
            parameters: {
              id: 50326,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 50319,
                  mutability: 'mutable',
                  name: 'from',
                  nameLocation: '1683:4:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50344,
                  src: '1675:12:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 50318,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '1675:7:35',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50321,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '1705:2:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50344,
                  src: '1697:10:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 50320,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '1697:7:35',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50323,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '1725:7:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50344,
                  src: '1717:15:35',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 50322,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1717:7:35',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 50325,
                  mutability: 'mutable',
                  name: 'data',
                  nameLocation: '1755:4:35',
                  nodeType: 'VariableDeclaration',
                  scope: 50344,
                  src: '1742:17:35',
                  stateVariable: false,
                  storageLocation: 'memory',
                  typeDescriptions: {
                    typeIdentifier: 't_bytes_memory_ptr',
                    typeString: 'bytes',
                  },
                  typeName: {
                    id: 50324,
                    name: 'bytes',
                    nodeType: 'ElementaryTypeName',
                    src: '1742:5:35',
                    typeDescriptions: {
                      typeIdentifier: 't_bytes_storage_ptr',
                      typeString: 'bytes',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '1665:100:35',
            },
            returnParameters: {
              id: 50328,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1782:0:35',
            },
            scope: 50345,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 50186,
              name: 'ERC721',
              nameLocations: ['189:6:35'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 46141,
              src: '189:6:35',
            },
            id: 50187,
            nodeType: 'InheritanceSpecifier',
            src: '189:6:35',
          },
          {
            baseName: {
              id: 50188,
              name: 'Ownable',
              nameLocations: ['197:7:35'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 45047,
              src: '197:7:35',
            },
            id: 50189,
            nodeType: 'InheritanceSpecifier',
            src: '197:7:35',
          },
        ],
        canonicalName: 'Ticket',
        contractDependencies: [],
        contractKind: 'contract',
        fullyImplemented: true,
        linearizedBaseContracts: [
          50345, 45047, 46141, 45137, 46304, 46258, 46742, 46754, 46411,
        ],
        name: 'Ticket',
        nameLocation: '179:6:35',
        scope: 50346,
        usedErrors: [
          44913, 44918, 45095, 45100, 45109, 45114, 45119, 45126, 45131, 45136,
        ],
        usedEvents: [44924, 46157, 46166, 46175],
      },
    ],
    license: 'MIT',
  },
  id: 35,
};
